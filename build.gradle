plugins {
  id 'java'
  id 'maven'
  id 'maven-publish'
  id 'checkstyle'
  id 'java-library'
  id "com.jfrog.bintray" version "1.8.0"
  id 'org.owasp.dependencycheck' version '3.1.2'
  id 'com.github.ben-manes.versions' version '0.17.0'
}

group = 'uk.gov.hmcts.reform'
version = '2.0.0'

checkstyle.toolVersion = '7.2'
checkstyle.configFile = new File(rootDir, "checkstyle.xml")

// make build fail on Checkstyle issues (https://github.com/gradle/gradle/issues/881)
tasks.withType(Checkstyle).each { checkstyleTask ->
  checkstyleTask.doLast {
    reports.all { report ->
      def outputFile = report.destination
      if (outputFile.exists() && outputFile.text.contains("<error ")) {
        throw new GradleException("There were checkstyle warnings! For more info check $outputFile")
      }
    }
  }
}

sourceCompatibility = 1.8

dependencyUpdates.resolutionStrategy = {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
  // Specifies if the build should be failed if a CVSS score above a specified level is identified.
  // range of 0-10 fails the build, anything greater and it doesn't fail the build
  failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
}

repositories {
  maven {
    url = 'http://artifactory.reform.hmcts.net/artifactory/libs-release'
  }
  jcenter() // fallback if artifactory is unavailable
  mavenLocal()
}

jar {
  manifest {
    attributes 'Implementation-Title': project.name, 'Implementation-Version': project.version
  }
}

task printVersion {
  doLast {
    print project.version
  }
}

publishing {
  publications {
    Main(MavenPublication) {
      from components.java
      groupId project.group
      artifactId 'http-proxy-spring-boot-autoconfigure'
      version = project.version
    }
  }
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['Main']
  publish = true
  pkg {
    repo = 'hmcts-maven'
    name = 'http-proxy-spring-boot-autoconfigure'
    userOrg = 'hmcts'
    licenses = ['MIT']
    vcsUrl = 'https://github.com/hmcts/http-proxy-spring-boot-autoconfigure'
    version {
      name = project.version
    }
  }
}

def springBootVersion = '2.0.1.RELEASE'

dependencies {
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
  compileOnly group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion

  testCompile group: 'com.github.stefanbirkner', name: 'system-rules', version: '1.17.1'
  testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion

}
